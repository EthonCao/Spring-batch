<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
http://www.springframework.org/schema/tx  
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
http://www.springframework.org/schema/aop  
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
http://www.springframework.org/schema/context  
http://www.springframework.org/schema/context/spring-context-3.0.xsd"
    default-autowire="byName">
    
    <!--配置job repository 负责job的整个运行过程中的CRUD操作
    	 提供了对JonLauncher, Job, Step实现类的CRUD操作
    	初次加载job的时候，从repository中获取JobExecution
    	在执行过程中，JobExecution, StepExecution通过repository持久化
	-->
    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean" />

	<!-- 配置job launcher 负责启动job-->
	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository"></property>
	</bean>
	
	<!-- Config transaction, used for manage all the job transactions -->
    <bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>
    
    <!-- 配置job参数传递bean jobParameterBulider -->
    <bean id="jobParameterBulider" class="org.springframework.batch.core.JobParametersBuilder" />
    
    <!-- 处理数据工具类 -->
    <bean id="dbTableDataHandler" class="com.yjmh.springbatch.archive.DB_Table_Data_Handler"/>
    
    <!-- 查询条件 -->
    <bean id="queryCondition" class = "com.yjmh.springbatch.beans.QueryCondition"/>
    <!-- 
              配置job异步多线程
    <bean id="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor" />
     -->
</beans>